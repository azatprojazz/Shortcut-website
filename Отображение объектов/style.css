.page {
  box-sizing: border-box;
  font-family: 'Avenir Next';
  background-color: var(--color-bg);
  color: var(--color-text);
}

.container {
  overflow: hidden;
  margin: 10px auto;
  border: 1px solid var(--color-accent);
  border-radius: 8px;
  box-shadow: var(--box-shadow);
  word-wrap: anywhere;
}

.header {
  padding: 5px 6px 4px;
}

.main {
  padding: 5px 6px;
}

.margins {
  display: block;
  margin: 4px;
}

.link {
  font-size: 15px;
  font-weight: bold;
  color: var(--color-text-link);
  text-decoration: none;
}

.link:hover {
  color: var(--color-text-link_hover);
}

.link:visited {
  color: var(--color-text-link_visited);
}

.link:visited:hover {
  color: var(--color-text-link_hover);
}

.header {
  border-bottom: 1px solid var(--color-accent);
}

.main {
  font-weight: 500;
  border-bottom: 1px solid var(--color-accent);
}

.title {
  margin: 0;
  padding: 0;
  font-size: 1.2em;
  font-weight: bold;
  line-height: 1.2;
  hyphens: auto;
  /* word-break: break-all; */

  overflow-wrap: break-word;
}

.title-bold {
  font-size: large;
}

.link__things {
  font-size: 1em;
  color: var(--color-text);
}

.link__url {
  display: block;
  overflow-x: auto;
  white-space: nowrap;
}

.list-item {
  align-items: baseline;
  color: var(--color-check-list);
}

.list-item__number {
  font-size: 0.9em;
}

.list-item__ol {
  margin-left: 8px;
  color: var(--color-text);
}

.list-item__ul {
  color: var(--color-text);
}

.list-item__ul::before {
  content: '•';
  margin-right: 11px;
  color: var(--color-check-list);
}

.list-item_check {
  width: fit-content;
  margin: 6px 0;
  padding: 1px 7px;
  align-items: baseline;
  border: 2px solid var(--color-list-item_check);
  border-radius: 8px;
  color: var(--color-text);
}

.list-item_done {
  width: fit-content;
  margin: 6px 0;
  padding: 1px 7px;
  align-items: baseline;
  border: 2px solid var(--color-list-item_done);
  border-radius: 8px;
  background-color: var(--color-list-item-bg_done);
  color: var(--color-text-list-item);
}

.list-item_done::before {
  content: '☑️';
  margin-right: 5px;
  font-size: 0.8em;
}

.list-item_cancel {
  width: fit-content;
  margin: 6px 0;
  padding: 1px 7px;
  align-items: baseline;
  border: 2px solid var(--color-accent);
  border-radius: 8px;
  background-color: var(--color-list-item_cancel);
  color: var(--color-text-list-item);

  text-decoration-line: line-through;
}

.list-item_cancel::before {
  content: '❌';
  margin-right: 5px;
  font-size: 0.8em;
}

.citation {
  font-family: 'Georgia', serif;
  font-style: italic;
}

.highlight {
  width: fit-content;
  padding: 0 3px;
  font-weight: 500;
  border-radius: 6px;
  background-color: var(--color-highlight);
}

.cancel {
  text-decoration: line-through;
}

.quote {
  width: fit-content;
  margin: 0;
  padding: 3px 5px;
  font-weight: 600;
  border-radius: 4px;
  background-color: var(--color-bg-quote);
  color: var(--color-text);
}

.blockquote {
  overflow-x: auto;
  margin: 0;
  padding: 8px 10px;
  font-weight: 600;
  border-radius: 4px;
  background-color: var(--color-bg-blockquote);
  color: var(--color-text);
  white-space: nowrap;
}

.bold {
  font-weight: bold;
}

.italic {
  font-weight: 600;
  font-style: italic;
}

.dashed {
  display: block;
  margin: 10px 0;
  border-top: 2px dashed var(--color-accent);
}

.section {
  display: flex;
  padding: 4px 7px;
  border-bottom: 1px solid var(--color-accent);
}

.footer {
  display: grid;
  padding: 5px 6px;
  grid-template-columns: min-content max-content max-content max-content;
}

.section,
.footer {
  overflow-x: auto;
  gap: 6px;
  white-space: nowrap;
}

.tags,
.date,
.deadline,
.when {
  display: flex;
  padding: 1px 5px 0 4px;
  align-self: center;
  font-size: 0.9em;
  font-weight: bold;
  border-radius: 8px;
}

.tags {
  background-color: var(--color-bg-tags);
  color: var(--color-text-tags);
}

.date {
  grid-area: 1/2/1/2;
  background-color: var(--color-bg-date);
  color: var(--color-text-date);
}

.deadline {
  grid-area: 1/3/1/3;
  background-color: var(--color-bg-deadline);
  color: var(--color-text-deadline);
}

.when {
  padding-bottom: 1px;
  grid-area: 1/4/1/4;
  box-shadow: inset 0 0 0 2px var(--color-bg-when);
  color: var(--color-text-when);
}
/* Базовые стили для чекбокса */
.checkbox {
  position: relative;
  display: inline-block;
  width: 23px;
  height: 23px;
  border: 2px solid var(--color-checkbox);
  border-radius: 7px;
  cursor: pointer;
  transition: background-color 0.2s, border-color 0.2s;
}

.checkbox:hover {
  border: 2px solid var(--color-checkbox_hover);
}

/* Состояние "выполнено" — эффект клика с галочкой */
.checkbox.checked {
  border-color: transparent;
  background-color: var(--color-checkbox_checked);
  animation: clickChecked 0.2s ease-out;
}

@keyframes clickChecked {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
  }
}

.checkbox.checked::after {
  content: '';
  position: absolute;
  top: 8%;
  left: 28%;
  width: 7px;
  height: 12px;
  border: solid var(--color-checkbox-done_checked);
  border-width: 0 4px 4px 0;
  transform: rotate(45deg) scale(0);
  animation: drawCheck 0.2s forwards 0.1s;
  opacity: 0;
}


@keyframes drawCheck {
  0% {
    transform: rotate(45deg) scale(0);
    opacity: 0;
  }
  100% {
    transform: rotate(45deg) scale(1);
    opacity: 1;
  }
}

/* Состояние "отменено" — эффект клика с крестиком */
.checkbox.cancelled {
  border-color: transparent;
  background-color: var(--color-checkbox_cancel);
  animation: clickCancelled 0.2s ease-out;
}

@keyframes clickCancelled {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
  }
}

/* Псевдоэлементы для отрисовки крестика */
.checkbox.cancelled::before,
.checkbox.cancelled::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 51%;
  background: var(--color-checkbox-cross_cancel); /* Цвет линий крестика */
  transform-origin: center; /* Центр трансформации */
  opacity: 0;
}

/* Первая линия крестика */
.checkbox.cancelled::before {
  width: 18px;
  height: 4px;
  transform: translate(-50%, -50%) rotate(45deg) scaleX(0);
  animation: drawCross1 0.2s forwards 0.1s;
}

/* Вторая линия крестика */
.checkbox.cancelled::after {
  width: 18px;
  height: 4px;
  transform: translate(-50%, -50%) rotate(-45deg) scaleX(0);
  animation: drawCross2 0.2s forwards 0.15s;
}


@keyframes drawCross1 {
  0% {
    transform: translate(-50%, -50%) rotate(45deg) scaleX(0);
    opacity: 0;
  }
  100% {
    transform: translate(-50%, -50%) rotate(45deg) scaleX(1);
    opacity: 1;
  }
}

@keyframes drawCross2 {
  0% {
    transform: translate(-50%, -50%) rotate(-45deg) scaleX(0);
    opacity: 0;
  }
  100% {
    transform: translate(-50%, -50%) rotate(-45deg) scaleX(1);
    opacity: 1;
  }
}

/* Основной стиль для кнопки */
.complete-all {
  /* Для позиционирования псевдоэлемента, который будет создавать эффект сияния */
  position: relative;
  display: flex;
  overflow: hidden; /* Скрываем все, что выходит за пределы кнопки */
  width: 100%;
  padding: 5px;
  justify-content: center;
  font-weight: bold;
  border: 2px solid var(--color-accent);
  border-radius: 10px;
  background-color: var(--color-bg-button);
  box-shadow: var(--box-shadow);
  color: var(--color-text-button);
  cursor: pointer;
  /* Плавные переходы для трансформаций и смены фона/цвета */
  transition: transform 0.3s cubic-bezier(0.25, 1, 0.5, 1),
  background-color 0.3s ease,
  color 0.3s ease;
}

/* Эффект при наведении на кнопку */
.complete-all:hover {
  background-color: var(--color-bg-button_hover);
  color: var(--color-text-button_hover);
  /* Небольшое увеличение кнопки */
  transform: scale(1.02);
}

/* Псевдоэлемент ::before для создания эффекта «сияния» */
/* Этот элемент будет скользить по кнопке при наведении */
.complete-all::before {
  content: '';
  position: absolute;
  top: 0;
  left: -75%;      /* Изначально располагается за левой границей кнопки */
  width: 50%;      /* Ширина эффекта */
  height: 100%;
  /* Полупрозрачный белый цвет для имитации блеска */
  background: rgba(255, 255, 255, 0.2);
  /* Плавное перемещение эффекта при наведении */
  transition: left 0.5s ease;
  /* Наклон, чтобы эффект выглядел динамично */
  transform: skewX(-25deg);
}

/* При наведении перемещаем псевдоэлемент за правую границу кнопки */
.complete-all:hover::before {
  left: 125%;
}

/* Анимация пульсации при клике (активном состоянии кнопки) */
/* Кнопка слегка «сжимаеся» и возвращается в исходное состояние с эффектом боковой тени */
.complete-all:active {
  animation: pulse 0.6s;
}

/* Ключевые кадры для анимации пульсации */
@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.7);
    transform: scale(1);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
    transform: scale(0.98);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
    transform: scale(1);
  }
}
